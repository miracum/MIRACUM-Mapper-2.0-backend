package models

import "gorm.io/gorm"

type Concept struct {
	ID                  uint64 `gorm:"primarykey"`
	Code                string
	Display             string
	CodeSystemID        uint32 `gorm:"index"`
	Elements            []Element
	CodeSystem          CodeSystem
	DisplaySearchVector string `gorm:"type:tsvector GENERATED ALWAYS AS (to_tsvector('english', display)) STORED ;index:,type:gin"`
}

// DisplaySearchVector is AutoGenerated and should not be updated
func (c *Concept) BeforeCreate(tx *gorm.DB) (err error) {
	tx.Statement.Omit("DisplaySearchVector")
	return
}

// Create an index to accelerate the search for codes. This should support a case insensitive prefix search so the combination of lower and text_pattern_ops is used.
func CreateConceptIndex(db *gorm.DB) error {
	return db.Exec("CREATE INDEX IF NOT EXISTS code_idx ON concepts (LOWER(code) text_pattern_ops);").Error
}
