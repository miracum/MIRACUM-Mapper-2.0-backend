version: "3.3"
services:
  miracum-mapper:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: miracum-mapper
    ports:
      - "8080:8080"
    environment:
      - KEYCLOAK_URL=http://keycloak:8080
      - KEYCLOAK_REALM=master
      - KEYCLOAK_CLIENT_ID=miracum-mapper
      - DB_HOST=miracum-postgres
      - DB_NAME=miracum_db
      - DB_USER=miracum_user
      - DB_PASSWORD=miracum_password
    depends_on:
      - keycloak
      - miracum-postgres
    networks:
      - public_network
      - miracum_network_internal

  miracum-postgres:
    image: postgres:12
    container_name: miracum-postgres
    environment:
      - POSTGRES_DB=miracum_db
      - POSTGRES_USER=miracum_user
      - POSTGRES_PASSWORD=miracum_password
    ports:
      - "5432:5432"
    volumes:
      - miracum_postgres_data:/var/lib/postgresql/data
    hostname: miracum-postgres
    networks:
      - miracum_network_internal
      - public_network

  keycloak:
    image: keycloak/keycloak:26.0
    container_name: keycloak
    environment:
      KC_HOSTNAME: localhost # https://localhost/keycloak
      KC_HOSTNAME_PORT: 8081
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-postgres/keycloak_db
      KC_DB_USERNAME: keycloak_user
      KC_DB_PASSWORD: keycloak_password
    ports:
      - "8081:8080"
    depends_on:
      - keycloak-postgres
    command: ["start-dev"]
    networks:
      - public_network
      - keycloak_network_internal

  keycloak-postgres:
    image: postgres:12
    container_name: keycloak-postgres
    environment:
      - POSTGRES_DB=keycloak_db
      - POSTGRES_USER=keycloak_user
      - POSTGRES_PASSWORD=keycloak_password
    ports:
      - "5433:5432"
    volumes:
      - keycloak_postgres_data:/var/lib/postgresql/data
    hostname: keycloak-postgres
    networks:
      - keycloak_network_internal

volumes:
  miracum_postgres_data:
    external: true
    name: miracum_postgres_data
  keycloak_postgres_data:
    external: true
    name: keycloak_postgres_data
networks:
  public_network:
    driver: bridge
    # external: true
  miracum_network_internal:
    driver: bridge
    internal: true
  keycloak_network_internal:
    driver: bridge
